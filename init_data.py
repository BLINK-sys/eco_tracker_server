from models import db, User, Location, Container, Company
from datetime import datetime, timedelta
import uuid


def init_test_data():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π (–µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç)
    company1 = Company.query.filter_by(name='EcoService –ê—Å—Ç–∞–Ω–∞').first()
    if not company1:
        company1 = Company(
            name='EcoService –ê—Å—Ç–∞–Ω–∞',
            description='–ö–æ–º–ø–∞–Ω–∏—è –ø–æ —Å–±–æ—Ä—É –∏ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–µ –æ—Ç—Ö–æ–¥–æ–≤ –≤ –ê—Å—Ç–∞–Ω–µ',
            address='–ø—Ä. –ö–∞–±–∞–Ω–±–∞–π –ë–∞—Ç—ã—Ä–∞, 1, –ê—Å—Ç–∞–Ω–∞',
            phone='+7 (7172) 111-222',
            email='info@ecoservice.kz'
        )
        db.session.add(company1)
        print("  - –°–æ–∑–¥–∞–Ω–∞ –∫–æ–º–ø–∞–Ω–∏—è: EcoService –ê—Å—Ç–∞–Ω–∞")
    
    company2 = Company.query.filter_by(name='–ì—Ä–∏–Ω–¢–µ—Ö –ö–ó').first()
    if not company2:
        company2 = Company(
            name='–ì—Ä–∏–Ω–¢–µ—Ö –ö–ó',
            description='–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—Ö–æ–¥–∞–º–∏',
            address='—É–ª. –î–æ—Å—Ç—ã–∫, 25, –ê—Å—Ç–∞–Ω–∞',
            phone='+7 (7172) 333-444',
            email='contact@greentech.kz'
        )
        db.session.add(company2)
        print("  - –°–æ–∑–¥–∞–Ω–∞ –∫–æ–º–ø–∞–Ω–∏—è: –ì—Ä–∏–Ω–¢–µ—Ö –ö–ó")
    
    db.session.flush()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–ø–∞–Ω–∏–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏—Ö ID
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å email
    if not User.query.filter_by(email='admin@mail.ru').first():
        admin = User(
            email='admin@mail.ru',
            role='admin',
            parent_company_id=company1.id
        )
        admin.set_password('admin123')
        db.session.add(admin)
        print("  - –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: admin@mail.ru")
    
    if not User.query.filter_by(email='user@mail.ru').first():
        user = User(
            email='user@mail.ru',
            role='user',
            parent_company_id=company1.id
        )
        user.set_password('user123')
        db.session.add(user)
        print("  - –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: user@mail.ru")
    
    if not User.query.filter_by(email='manager@mail.ru').first():
        manager = User(
            email='manager@mail.ru',
            role='user',
            parent_company_id=company2.id
        )
        manager.set_password('manager123')
        db.session.add(manager)
        print("  - –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: manager@mail.ru")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–ª–æ—â–∞–¥–æ–∫ (–µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç)
    if Location.query.first() is not None:
        print("  - –ü–ª–æ—â–∞–¥–∫–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
        db.session.commit()
        return
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–ª–æ—â–∞–¥–æ–∫ —Å UUID –∏ –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ –∫–æ–º–ø–∞–Ω–∏—è–º
    # –ü–ª–æ—â–∞–¥–∫–∏ 1-3 –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç EcoService –ê—Å—Ç–∞–Ω–∞
    # –ü–ª–æ—â–∞–¥–∫–∏ 4-5 –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç –ì—Ä–∏–Ω–¢–µ—Ö –ö–ó
    test_locations = [
        {
            'name': '–ü–ª–æ—â–∞–¥–∫–∞ #1',
            'address': '–ø—Ä. –ö–∞–±–∞–Ω–±–∞–π –ë–∞—Ç—ã—Ä–∞, 53, –ê—Å—Ç–∞–Ω–∞',
            'lat': 51.128,
            'lng': 71.430,
            'containers': [
                {'number': 1, 'status': 'full', 'fill_level': 95},
                {'number': 2, 'status': 'empty', 'fill_level': 5},
                {'number': 3, 'status': 'partial', 'fill_level': 45},
                {'number': 4, 'status': 'empty', 'fill_level': 10},
            ],
            'last_collection': datetime.utcnow() - timedelta(hours=12)
        },
        {
            'name': '–ü–ª–æ—â–∞–¥–∫–∞ #2',
            'address': '–ø—Ä. –†–µ—Å–ø—É–±–ª–∏–∫–∏, 24, –ê—Å—Ç–∞–Ω–∞',
            'lat': 51.124,
            'lng': 71.427,
            'containers': [
                {'number': 1, 'status': 'full', 'fill_level': 85},
                {'number': 2, 'status': 'empty', 'fill_level': 0},
                {'number': 3, 'status': 'empty', 'fill_level': 15},
            ],
            'last_collection': datetime.utcnow() - timedelta(hours=8)
        },
        {
            'name': '–ü–ª–æ—â–∞–¥–∫–∞ #3',
            'address': '—É–ª. –°—ã–≥–∞–Ω–∞–∫, 15, –ê—Å—Ç–∞–Ω–∞',
            'lat': 51.120,
            'lng': 71.420,
            'containers': [
                {'number': 1, 'status': 'partial', 'fill_level': 55},
                {'number': 2, 'status': 'partial', 'fill_level': 60},
                {'number': 3, 'status': 'empty', 'fill_level': 20},
                {'number': 4, 'status': 'full', 'fill_level': 90},
            ],
            'last_collection': datetime.utcnow() - timedelta(hours=24)
        },
        {
            'name': '–ü–ª–æ—â–∞–¥–∫–∞ #4',
            'address': '—É–ª. –î–æ—Å—Ç—ã–∫, 13, –ê—Å—Ç–∞–Ω–∞',
            'lat': 51.126,
            'lng': 71.440,
            'containers': [
                {'number': 1, 'status': 'full', 'fill_level': 100},
                {'number': 2, 'status': 'full', 'fill_level': 95},
                {'number': 3, 'status': 'full', 'fill_level': 90},
                {'number': 4, 'status': 'partial', 'fill_level': 65},
            ],
            'last_collection': datetime.utcnow() - timedelta(hours=36)
        },
        {
            'name': '–ü–ª–æ—â–∞–¥–∫–∞ #5',
            'address': '–ø—Ä. –¢—É—Ä–∞–Ω, 37, –ê—Å—Ç–∞–Ω–∞',
            'lat': 51.133,
            'lng': 71.436,
            'containers': [
                {'number': 1, 'status': 'full', 'fill_level': 100},
                {'number': 2, 'status': 'full', 'fill_level': 100},
            ],
            'last_collection': datetime.utcnow() - timedelta(hours=48)
        },
    ]
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–æ—â–∞–¥–æ–∫ –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π UUID
    for idx, loc_data in enumerate(test_locations):
        # –ü–µ—Ä–≤—ã–µ 3 –ø–ª–æ—â–∞–¥–∫–∏ –¥–ª—è company1, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–ª—è company2
        assigned_company_id = company1.id if idx < 3 else company2.id
        
        location = Location(
            name=loc_data['name'],
            address=loc_data['address'],
            lat=loc_data['lat'],
            lng=loc_data['lng'],
            company_id=assigned_company_id,
            last_collection=loc_data.get('last_collection')
        )
        db.session.add(location)
        db.session.flush()  # –ü–æ–ª—É—á–∞–µ–º UUID –¥–ª—è location
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        for cont_data in loc_data['containers']:
            container = Container(
                location_id=location.id,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º UUID –∏–∑ location
                number=cont_data['number'],
                status=cont_data['status'],
                fill_level=cont_data['fill_level']
            )
            db.session.add(container)
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–æ—â–∞–¥–∫–∏
        db.session.flush()
        location.update_status()
    
    db.session.commit()
    print("\n‚úì –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
    print("\nüìä –ò—Ç–æ–≥–æ —Å–æ–∑–¥–∞–Ω–æ:")
    print(f"  - –ö–æ–º–ø–∞–Ω–∏–∏: {Company.query.count()}")
    print(f"  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {User.query.count()}")
    print(f"  - –ü–ª–æ—â–∞–¥–∫–∏: {Location.query.count()}")
    print(f"  - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: {Container.query.count()}")
    print("\nüë§ –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
    print("  - admin@mail.ru / admin123 (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)")
    print("  - user@mail.ru / user123 (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)")
    print("  - manager@mail.ru / manager123 (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)")

